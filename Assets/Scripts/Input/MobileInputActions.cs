//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/Settings/MobileInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @MobileInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @MobileInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""MobileInputActions"",
    ""maps"": [
        {
            ""name"": ""ActionMap"",
            ""id"": ""c736d28f-abfa-4870-a11e-2f45d74ea5d9"",
            ""actions"": [
                {
                    ""name"": ""Touch0Delta"",
                    ""type"": ""Value"",
                    ""id"": ""87dc9e45-0eed-4680-9160-55b681328a8b"",
                    ""expectedControlType"": ""Delta"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Touch0Position"",
                    ""type"": ""Value"",
                    ""id"": ""6b2f6146-5558-4f4b-aa0a-112c5b287cb3"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Touch1Delta"",
                    ""type"": ""Value"",
                    ""id"": ""369a7080-05c1-4117-8edb-d71b2da5b0df"",
                    ""expectedControlType"": ""Delta"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Touch1Position"",
                    ""type"": ""Value"",
                    ""id"": ""f9c2903a-9502-40d6-a628-113153f8e273"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TapPosition"",
                    ""type"": ""Value"",
                    ""id"": ""7328c5c5-e80b-4963-a321-5b085094a3e6"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Tap"",
                    ""type"": ""Button"",
                    ""id"": ""14eef099-6079-4110-903b-a79612c6d189"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UIButton"",
                    ""type"": ""Button"",
                    ""id"": ""fc75239b-ea2e-418e-9052-b555216f7b5e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""91295c3a-5add-40f8-8e91-f8ceaff5f89a"",
                    ""path"": ""<Touchscreen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TapPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b12acd4a-7ca3-4389-84ea-38158a5843e9"",
                    ""path"": ""<Touchscreen>/primaryTouch/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch0Delta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""88277310-7e9e-4487-bc6f-251bf1f6fb68"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UIButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""830a3c43-ab0f-4d04-b402-b5bca4eeca9d"",
                    ""path"": ""<Touchscreen>/primaryTouch/tap"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""94376898-02b7-49c0-8eff-dbb993d45ce5"",
                    ""path"": ""<Touchscreen>/primaryTouch/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch0Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e37392df-2c5a-462b-b91a-8562c0280874"",
                    ""path"": ""<Touchscreen>/touch1/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch1Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""794f30f9-e653-45be-b5c4-c7588befb62d"",
                    ""path"": ""<Touchscreen>/touch1/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch1Delta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // ActionMap
        m_ActionMap = asset.FindActionMap("ActionMap", throwIfNotFound: true);
        m_ActionMap_Touch0Delta = m_ActionMap.FindAction("Touch0Delta", throwIfNotFound: true);
        m_ActionMap_Touch0Position = m_ActionMap.FindAction("Touch0Position", throwIfNotFound: true);
        m_ActionMap_Touch1Delta = m_ActionMap.FindAction("Touch1Delta", throwIfNotFound: true);
        m_ActionMap_Touch1Position = m_ActionMap.FindAction("Touch1Position", throwIfNotFound: true);
        m_ActionMap_TapPosition = m_ActionMap.FindAction("TapPosition", throwIfNotFound: true);
        m_ActionMap_Tap = m_ActionMap.FindAction("Tap", throwIfNotFound: true);
        m_ActionMap_UIButton = m_ActionMap.FindAction("UIButton", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // ActionMap
    private readonly InputActionMap m_ActionMap;
    private List<IActionMapActions> m_ActionMapActionsCallbackInterfaces = new List<IActionMapActions>();
    private readonly InputAction m_ActionMap_Touch0Delta;
    private readonly InputAction m_ActionMap_Touch0Position;
    private readonly InputAction m_ActionMap_Touch1Delta;
    private readonly InputAction m_ActionMap_Touch1Position;
    private readonly InputAction m_ActionMap_TapPosition;
    private readonly InputAction m_ActionMap_Tap;
    private readonly InputAction m_ActionMap_UIButton;
    public struct ActionMapActions
    {
        private @MobileInputActions m_Wrapper;
        public ActionMapActions(@MobileInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Touch0Delta => m_Wrapper.m_ActionMap_Touch0Delta;
        public InputAction @Touch0Position => m_Wrapper.m_ActionMap_Touch0Position;
        public InputAction @Touch1Delta => m_Wrapper.m_ActionMap_Touch1Delta;
        public InputAction @Touch1Position => m_Wrapper.m_ActionMap_Touch1Position;
        public InputAction @TapPosition => m_Wrapper.m_ActionMap_TapPosition;
        public InputAction @Tap => m_Wrapper.m_ActionMap_Tap;
        public InputAction @UIButton => m_Wrapper.m_ActionMap_UIButton;
        public InputActionMap Get() { return m_Wrapper.m_ActionMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ActionMapActions set) { return set.Get(); }
        public void AddCallbacks(IActionMapActions instance)
        {
            if (instance == null || m_Wrapper.m_ActionMapActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_ActionMapActionsCallbackInterfaces.Add(instance);
            @Touch0Delta.started += instance.OnTouch0Delta;
            @Touch0Delta.performed += instance.OnTouch0Delta;
            @Touch0Delta.canceled += instance.OnTouch0Delta;
            @Touch0Position.started += instance.OnTouch0Position;
            @Touch0Position.performed += instance.OnTouch0Position;
            @Touch0Position.canceled += instance.OnTouch0Position;
            @Touch1Delta.started += instance.OnTouch1Delta;
            @Touch1Delta.performed += instance.OnTouch1Delta;
            @Touch1Delta.canceled += instance.OnTouch1Delta;
            @Touch1Position.started += instance.OnTouch1Position;
            @Touch1Position.performed += instance.OnTouch1Position;
            @Touch1Position.canceled += instance.OnTouch1Position;
            @TapPosition.started += instance.OnTapPosition;
            @TapPosition.performed += instance.OnTapPosition;
            @TapPosition.canceled += instance.OnTapPosition;
            @Tap.started += instance.OnTap;
            @Tap.performed += instance.OnTap;
            @Tap.canceled += instance.OnTap;
            @UIButton.started += instance.OnUIButton;
            @UIButton.performed += instance.OnUIButton;
            @UIButton.canceled += instance.OnUIButton;
        }

        private void UnregisterCallbacks(IActionMapActions instance)
        {
            @Touch0Delta.started -= instance.OnTouch0Delta;
            @Touch0Delta.performed -= instance.OnTouch0Delta;
            @Touch0Delta.canceled -= instance.OnTouch0Delta;
            @Touch0Position.started -= instance.OnTouch0Position;
            @Touch0Position.performed -= instance.OnTouch0Position;
            @Touch0Position.canceled -= instance.OnTouch0Position;
            @Touch1Delta.started -= instance.OnTouch1Delta;
            @Touch1Delta.performed -= instance.OnTouch1Delta;
            @Touch1Delta.canceled -= instance.OnTouch1Delta;
            @Touch1Position.started -= instance.OnTouch1Position;
            @Touch1Position.performed -= instance.OnTouch1Position;
            @Touch1Position.canceled -= instance.OnTouch1Position;
            @TapPosition.started -= instance.OnTapPosition;
            @TapPosition.performed -= instance.OnTapPosition;
            @TapPosition.canceled -= instance.OnTapPosition;
            @Tap.started -= instance.OnTap;
            @Tap.performed -= instance.OnTap;
            @Tap.canceled -= instance.OnTap;
            @UIButton.started -= instance.OnUIButton;
            @UIButton.performed -= instance.OnUIButton;
            @UIButton.canceled -= instance.OnUIButton;
        }

        public void RemoveCallbacks(IActionMapActions instance)
        {
            if (m_Wrapper.m_ActionMapActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IActionMapActions instance)
        {
            foreach (var item in m_Wrapper.m_ActionMapActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_ActionMapActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public ActionMapActions @ActionMap => new ActionMapActions(this);
    public interface IActionMapActions
    {
        void OnTouch0Delta(InputAction.CallbackContext context);
        void OnTouch0Position(InputAction.CallbackContext context);
        void OnTouch1Delta(InputAction.CallbackContext context);
        void OnTouch1Position(InputAction.CallbackContext context);
        void OnTapPosition(InputAction.CallbackContext context);
        void OnTap(InputAction.CallbackContext context);
        void OnUIButton(InputAction.CallbackContext context);
    }
}
